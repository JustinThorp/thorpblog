---
title: "Brian Aubrey: The Greatest Kicker Ever?"
author: "Justin Thorp"
date: "2023-09-06"
categories: [news]
execute:
  echo: false
---

```{python}
import duckdb
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from matplotlib.lines import Line2D
```

# Introduction

-   Kickers are people maybe

    -   Can be hero or villain at the end of close games

-   But how should we evaluate them

    -   Raw counts are inadequate since it doesn't take into account distance

    -   Each kicker has a different probability of making a kick once you account for distance

    Kickers, despite their infrequent appearances in a game, they wield significant influence over their outcomes. The question lingers: how do we measure kickers proficiency? Raw counts, while seemingly comprehensive, falter by neglecting the crucial variable of kick distance, a factor that greatly impacts the probability of success. Delving deeper, the individual skill of each kicker further compounds the issue since each kicker has their own success probabilities distinct from the others. As games are decided on these pivotal moments, gauging a kicker's true skill demands a nuanced evaluation that considers these multifaceted variables.

If you were to ask any football who the best kicker in the league is almost all would give you the same answer: Justin Tucker. The only fans who would argue against this are those of a questionable mental state. Luckily I am in the latter category of fans and by the end of this post I hope to bring you into this group as well.

So, to make my argument that there is a kicker better then Justin Tucker we need to evaluate the kickers skills, but how can we do that. The most basic way is to just look at their field goals attempted (FGA) and see how many of them they made (FGM). This metric is easiest solution, but has a crucial flaw in that it does not take into account the distance of the FGA. Say we have two kickers both with a 100% field goal percentage, but one kicker has kicked all his kicks from 50 yards out vs the other who kicked all his kicks from 20 yards out. While these kickers have the same percentage one has had much more impressive resume.

# Methodlogy

-   Bayesian hierarchical
-   Same slope different intercepts

# Results

-   Show sims
-   Isnt that Justin Tucker
-   Suprise
-   Is he really the best

After simulating our posteriors distributions we obtained estimate for the probability of making a field goal fro each kicker and distance. @fig-1 has a line for each kicker showing their probability of making a kick from that distance.

```{python}
data = duckdb.query('''
SELECT 
    i,
    value,
    MAX(kicker_player_name) AS name,
    AVG(prob) AS prob
FROM 'kicker_sims.parquet'
GROUP BY i,value
''').df()
```

```{python}
#| label: fig-1
#| fig-cap: "Posteriors Estimate of Success Probability"
plot_df = data.pivot(index = 'value',columns = 'name',values = 'prob')
fig,ax = plt.subplots(figsize = (9,6),facecolor = '#303030',dpi = 100)
plot_df.plot(ax=ax,legend = False,color = 'grey',alpha =.4)
ax.set_xlabel('Kick Distance',color = '#E1E1E1',fontsize = 15)
ax.set_ylabel('Success Probability',color = '#E1E1E1',fontsize = 15)
ax.set_title('Kicker Success Probability',color = '#E1E1E1',fontsize = 15)
#ax.axvline('1987-10-19',color = 'white',alpha = .4)
ax.grid(color = '#4B4B4B',alpha = 1)
ax.set_facecolor("#303030")
ax.spines[['right', 'top']].set_visible(False)
ax.tick_params(axis='x', colors='#E1E1E1')
ax.tick_params(axis='y', colors='#E1E1E1')
for side in ['bottom','top','right','left']:
    ax.spines[side].set_color('#E1E1E1')
plt.show()
```

As you can see most kickers are bunched together, but there is one kicker who is well above the rest. A valid assumption would be that that kicker is Justin Tucker. Which is also what I assumed when I first did this analysis. So lets highlight Tuckers line. @fig-2 shows that while Justin Tucker is above almost all kickers he is not the best so who is this kicker?

```{python}
#| label: fig-2
#| fig-cap: "Posteriors Estimate of Success Probability"
fig,ax = plt.subplots(figsize = (9,6),facecolor = '#303030',dpi = 100)

#plot_df.plot(ax=ax,legend = False,color = 'grey',alpha =.4)
for col in plot_df.columns:
    ax.plot(plot_df.index,plot_df[col],color = 'grey',alpha =.4)
plot_df['J.Tucker'].plot(ax=ax)
ax.set_xlabel('Kick Distance',color = '#E1E1E1',fontsize = 15)
ax.set_ylabel('Success Probability',color = '#E1E1E1',fontsize = 15)
ax.set_title('Kicker Success Probability',color = '#E1E1E1',fontsize = 15)

ax.grid(color = '#4B4B4B',alpha = 1)
ax.set_facecolor("#303030")
ax.spines[['right', 'top']].set_visible(False)
ax.tick_params(axis='x', colors='#E1E1E1')
ax.tick_params(axis='y', colors='#E1E1E1')
for side in ['bottom','top','right','left']:
    ax.spines[side].set_color('#E1E1E1')
ax.legend()
plt.show()
```


```{python}

#| label: fig-3
#| fig-cap: "Posteriors Estimate of Success Probability"
fig,ax = plt.subplots(figsize = (9,6),facecolor = '#303030',dpi = 100)

#plot_df.plot(ax=ax,legend = False,color = 'grey',alpha =.4)
for col in plot_df.columns:
    ax.plot(plot_df.index,plot_df[col],color = 'grey',alpha =.4)
plot_df['B.Aubrey'].plot(ax=ax)
ax.set_xlabel('Kick Distance',color = '#E1E1E1',fontsize = 15)
ax.set_ylabel('Success Probability',color = '#E1E1E1',fontsize = 15)
ax.set_title('Kicker Success Probability',color = '#E1E1E1',fontsize = 15)

ax.grid(color = '#4B4B4B',alpha = 1)
ax.set_facecolor("#303030")
ax.spines[['right', 'top']].set_visible(False)
ax.tick_params(axis='x', colors='#E1E1E1')
ax.tick_params(axis='y', colors='#E1E1E1')
for side in ['bottom','top','right','left']:
    ax.spines[side].set_color('#E1E1E1')
ax.legend()
plt.show()
```